apiVersion: v1
kind: Namespace
metadata:
    name: csi-rclone-example-1
---
apiVersion: v1
kind: Service
metadata:
    name: nginx-example
    namespace: csi-rclone-example-1
    labels:
        run: nginx-example
spec:
    ports:
        - port: 80
          protocol: TCP
    selector:
        run: nginx-example
---
apiVersion: v1
kind: Pod
metadata:
    name: nginx-example
    namespace: csi-rclone-example-1
    labels:
        run: nginx-example
spec:
    containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx-example
          ports:
              - containerPort: 80
                protocol: TCP
          volumeMounts:
              - mountPath: /usr/share/nginx/html
                name: data-rclone-example
    volumes:
        - name: data-rclone-example
          persistentVolumeClaim:
              claimName: data-rclone-example
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: data-rclone-example
    namespace: csi-rclone-example-1
spec:
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 10Gi
    storageClassName: csi-rclone
    selector:
        matchLabels:
            name: data-rclone-example
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: data-rclone-example
    namespace: csi-rclone-example-1
    labels:
        name: data-rclone-example
spec:
    accessModes:
        - ReadWriteMany
    capacity:
        storage: 10Gi
    storageClassName: csi-rclone
    csi:
        driver: csi-rclone
        volumeHandle: data-id
        nodePublishSecretRef:
           name: rclone-secret
           namespace: csi-rclone-example-1
        # Will overwrite settings from the secret:
        #volumeAttributes:
        #  remote: "s3"
        #  remotePath: "projectname/pvname"
        #  s3-provider: "Minio"
        #  s3-endpoint: "http://minio.minio:9000"
        #  s3-access-key-id: "ACCESS_KEY_ID"
        #  s3-secret-access-key: "SECRET_ACCESS_KEY"
---
apiVersion: v1
kind: Secret
metadata:
    name: rclone-secret
    namespace: csi-rclone-example-1
type: Opaque
stringData:
    remote: ceph
    remotePath: csi-rclone-dev-test
    configData: |
        [ceph]
        type = s3
        provider = Ceph
        env_auth = false
        access_key_id = "${S3_ACCESS_KEY_ID}"
        secret_access_key = "${S3_SECRET_ACCESS_KEY}"
        endpoint = "${S3_ENDPOINT}"


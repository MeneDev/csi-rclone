apiVersion: v1
kind: Namespace
metadata:
    name: csi-rclone-example-2
---
apiVersion: v1
kind: Service
metadata:
    name: nginx-example
    namespace: csi-rclone-example-2
    labels:
        run: nginx-example
spec:
    ports:
        - port: 80
          protocol: TCP
    selector:
        run: nginx-example
---
apiVersion: v1
kind: Pod
metadata:
    name: nginx-example
    namespace: csi-rclone-example-2
    labels:
        run: nginx-example
spec:
    containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx-example
          ports:
              - containerPort: 80
                protocol: TCP
          volumeMounts:
              - mountPath: /usr/share/nginx/html
                name: data-rclone-example
    volumes:
        - name: data-rclone-example
          persistentVolumeClaim:
              claimName: csi-rclone-example-2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: csi-rclone-example-2
    namespace: csi-rclone-example-2
spec:
    accessModes:
        - ReadWriteMany
    resources:
        requests:
            storage: 10Gi
    storageClassName: csi-rclone
    selector:
        matchLabels:
            name: csi-rclone-example-2
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: csi-rclone-example-2
    namespace: csi-rclone-example-2
    labels:
        name: csi-rclone-example-2
spec:
    accessModes:
        - ReadWriteMany
    capacity:
        storage: 10Gi
    storageClassName: csi-rclone
    csi:
        driver: csi-rclone
        volumeHandle: data-id
        volumeAttributes:
          remote: ceph
          remotePath: csi-rclone-dev-test
          # Add flags here:
          #s3-provider: "Ceph"
          #s3-endpoint: "${S3_ENDPOINT}"
          #s3-access-key-id: "${S3_ACCESS_KEY_ID}"
          #s3-secret-access-key: "${S3_SECRET_ACCESS_KEY}"
          # Is expected:
          configData: |
            [ceph]
            type = s3
            provider = Ceph
            env_auth = false
            access_key_id = "${S3_ACCESS_KEY_ID}"
            secret_access_key = "${S3_SECRET_ACCESS_KEY}"
            endpoint = "${S3_ENDPOINT}"
          
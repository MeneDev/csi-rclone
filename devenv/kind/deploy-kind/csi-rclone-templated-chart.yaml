---
# Source: csi-rclone/templates/csi-controller-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-rclone-controller
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: csi-rclone/templates/csi-nodeplugin-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-rclone-nodeplugin
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: csi-rclone/templates/csi-rclone-storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-rclone
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
provisioner: kubernetes.io/no-provisioner
---
# Source: csi-rclone/templates/csi-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-rclone-external-controller
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - csi.storage.k8s.io
  resources:
  - csinodeinfos
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: csi-rclone/templates/csi-nodeplugin-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: csi-rclone-nodeplugin
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  - secret
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - volumeattachments
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
---
# Source: csi-rclone/templates/csi-controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-rclone-attacher-role
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'csi-rclone-external-controller'
subjects:
- kind: ServiceAccount
  name: 'csi-rclone-controller'
  namespace: 'default'
---
# Source: csi-rclone/templates/csi-nodeplugin-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-rclone-nodeplugin
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'csi-rclone-nodeplugin'
subjects:
- kind: ServiceAccount
  name: 'csi-rclone-nodeplugin'
  namespace: 'default'
---
# Source: csi-rclone/templates/csi-nodeplugin-rclone.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-rclone-nodeplugin
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: csi-nodeplugin-rclone
      app.kubernetes.io/name: csi-rclone
      app.kubernetes.io/instance: csi-rclone
  template:
    metadata:
      labels:
        app: csi-nodeplugin-rclone
        app.kubernetes.io/name: csi-rclone
        app.kubernetes.io/instance: csi-rclone
    spec:
      containers:
      - args:
        - --v=5
        - --csi-address=/plugin/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-rclone/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/csi-rclone /registration/csi-rclone-reg.sock
        name: node-driver-registrar
        resources: {}
        volumeMounts:
        - mountPath: /plugin
          name: plugin-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - /bin/csi-rclone-plugin
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: "unix://plugin/csi.sock"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: csi-rclone:latest
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - mount -t fuse.rclone | while read -r mount; do umount $(echo $mount | awk {print $3}) ; done
        name: rclone
        resources:
            {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /plugin
          name: plugin-dir
        - mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
          name: pods-mount-dir
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: csi-rclone-nodeplugin
      volumes:
      - hostPath:
          path: /var/lib/kubelet/plugins/csi-rclone
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet/pods
          type: Directory
        name: pods-mount-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: DirectoryOrCreate
        name: registration-dir
---
# Source: csi-rclone/templates/csi-controller-rclone.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-rclone-controller
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-controller-rclone
  serviceName: csi-rclone-controller
  template:
    metadata:
      labels:
        app: csi-controller-rclone
    spec:
      containers:
      - args:
        - --v=5
        - --csi-address=$(ADDRESS)
        - --leader-election
        env:
        - name: ADDRESS
          value: "/csi/csi.sock"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: k8s.gcr.io/sig-storage/csi-attacher:v3.4.0
        imagePullPolicy: IfNotPresent
        name: csi-attacher
        resources: {}
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - /bin/csi-rclone-plugin
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: "unix://plugin/csi.sock"
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: "cluster.local"
        image: csi-rclone:latest
        imagePullPolicy: IfNotPresent
        name: rclone
        resources:
            {}
        volumeMounts:
        - mountPath: /plugin
          name: socket-dir
      serviceAccountName: csi-rclone-controller
      volumes:
      - emptyDir: {}
        name: socket-dir
  updateStrategy: {}
---
# Source: csi-rclone/templates/csi-driver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi-rclone-driver
  labels:
    helm.sh/chart: csi-rclone-0.1.0
    app.kubernetes.io/name: csi-rclone
    app.kubernetes.io/instance: csi-rclone
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  attachRequired: true
  podInfoOnMount: false
